// Code generated by MockGen. DO NOT EDIT.
// Source: grpc_auth_svc.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	pbgen "github.com/sony-nurdianto/farm/services/Rest/farm_gateway/farm_gateway/internal/pbgen"
)

// MockGrpcAuthService is a mock of GrpcAuthService interface.
type MockGrpcAuthService struct {
	ctrl     *gomock.Controller
	recorder *MockGrpcAuthServiceMockRecorder
}

// MockGrpcAuthServiceMockRecorder is the mock recorder for MockGrpcAuthService.
type MockGrpcAuthServiceMockRecorder struct {
	mock *MockGrpcAuthService
}

// NewMockGrpcAuthService creates a new mock instance.
func NewMockGrpcAuthService(ctrl *gomock.Controller) *MockGrpcAuthService {
	mock := &MockGrpcAuthService{ctrl: ctrl}
	mock.recorder = &MockGrpcAuthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGrpcAuthService) EXPECT() *MockGrpcAuthServiceMockRecorder {
	return m.recorder
}

// AuthTokenValidate mocks base method.
func (m *MockGrpcAuthService) AuthTokenValidate(req *pbgen.TokenValidateRequest) (*pbgen.TokenValidateResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthTokenValidate", req)
	ret0, _ := ret[0].(*pbgen.TokenValidateResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AuthTokenValidate indicates an expected call of AuthTokenValidate.
func (mr *MockGrpcAuthServiceMockRecorder) AuthTokenValidate(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthTokenValidate", reflect.TypeOf((*MockGrpcAuthService)(nil).AuthTokenValidate), req)
}

// AuthUserRegister mocks base method.
func (m *MockGrpcAuthService) AuthUserRegister(req *pbgen.RegisterUserRequest) (*pbgen.RegisterUserResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthUserRegister", req)
	ret0, _ := ret[0].(*pbgen.RegisterUserResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AuthUserRegister indicates an expected call of AuthUserRegister.
func (mr *MockGrpcAuthServiceMockRecorder) AuthUserRegister(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthUserRegister", reflect.TypeOf((*MockGrpcAuthService)(nil).AuthUserRegister), req)
}

// AuthUserSignIn mocks base method.
func (m *MockGrpcAuthService) AuthUserSignIn(req *pbgen.AuthenticateUserRequest) (*pbgen.AuthenticateUserResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthUserSignIn", req)
	ret0, _ := ret[0].(*pbgen.AuthenticateUserResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AuthUserSignIn indicates an expected call of AuthUserSignIn.
func (mr *MockGrpcAuthServiceMockRecorder) AuthUserSignIn(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthUserSignIn", reflect.TypeOf((*MockGrpcAuthService)(nil).AuthUserSignIn), req)
}
