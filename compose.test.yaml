services: 
  test-postgres:
    image: postgres:17.4-bookworm
    restart: always
    ports:
      - 5000:5432
    container_name: "test-postgres"
    environment:
      POSTGRES_USER: sony
      POSTGRES_PASSWORD: secret 
      POSTGRES_DB: testdb  # Tambahkan database name
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - farm_test_postgres:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sony -d testdb"]  # Fix user dan db name
      interval: 10s  
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - 9080:8080

  test-kafka-controller-1:
    image: apache/kafka:latest
    container_name: test-kafka-controller-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@test-kafka-controller-1:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  test-kafka-broker-1:
    image: apache/kafka:latest
    container_name: test-kafka-broker-1
    ports:
      - 29092:9092
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_LOG_DIRS: /kafka-logs
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://test-kafka-broker-1:19092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@test-kafka-controller-1:9093
      KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true  # Enable untuk Connect internal topics
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: true
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1  # FIXED: Karena hanya 1 broker
      KAFKA_MIN_INSYNC_REPLICAS: 1         # FIXED: Karena hanya 1 broker
      
      # Fix untuk internal topics
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      
      KAFKA_LOG_SEGMENT_BYTES: 67108864    # 64 MB
      KAFKA_LOG_RETENTION_BYTES: 268435456 # 256 MB
    volumes:
      - kafka_test_logs:/kafka-logs:z
    depends_on:
      - test-kafka-controller-1

  test-schema-registry:
    image: confluentinc/cp-schema-registry:7.2.15
    container_name: test-schema-registry
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: test-schema-registry  # FIXED: Match container name
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'test-kafka-broker-1:19092'  # FIXED: Correct port
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
    depends_on:
      - test-kafka-broker-1

  test-kafka-connect:
    image: confluentinc/cp-kafka-connect:7.2.15
    container_name: test-kafka-connect
    ports:
      - "8083:8083"
    environment:
      # FIXED: Correct bootstrap servers
      CONNECT_BOOTSTRAP_SERVERS: 'test-kafka-broker-1:19092'
      CONNECT_REST_ADVERTISED_HOST_NAME: test-kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: test-compose-connect-group
      
      # Internal topics
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      
      # FIXED: Replication factors sesuai dengan jumlah broker (1)
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      
      # Converters
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://test-schema-registry:8081
      
      # Internal converters untuk Connect metadata
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: false
      
      # Plugin path
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      
      # Logging
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      
      # Heap settings
      KAFKA_HEAP_OPTS: "-Xms512m -Xmx512m"

    command:
        - bash
        - -c
        - |
          confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.8.4 && \
          /etc/confluent/docker/run
        
    volumes:
      - kafka_test_connect_data:/data
    depends_on:
      - test-kafka-broker-1
      - test-schema-registry
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  farm_test_postgres:
  kafka_test_logs:
  kafka_test_connect_data:


