receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  jaeger:
    protocols:
      grpc:
        endpoint: 0.0.0.0:14250

  zipkin:
    endpoint: 0.0.0.0:9411

  hostmetrics:
    collection_interval: 30s
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      disk:
      filesystem:
        exclude_mount_points:
          mount_points: ["/dev/*", "/proc/*", "/sys/*", "/var/lib/docker/*", "/var/lib/containerd/*", "/snap/*"]
          match_type: regexp
      load:
      memory:
      network:
      paging:
      processes:
      process:
        mute_process_name_error: true


  filelog:
    include: ["/var/log/**/*.log", "/var/lib/containers/*/*.log"]
    exclude: ["/var/log/btmp", "/var/log/wtmp"]
    operators:
      - type: json_parser
        id: docker_json_parser
        if: 'body matches "^\\{"'
      - type: time_parser
        parse_from: attributes.time
        layout_type: strptime
        layout: '%Y-%m-%dT%H:%M:%S.%fZ'

  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 30s
          static_configs:
            - targets: ['0.0.0.0:8888']
        - job_name: 'tempo'
          scrape_interval: 30s
          static_configs:
            - targets: ['tempo:3200']

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  memory_limiter:
    limit_mib: 400
    check_interval: 1s

  resourcedetection:
    detectors: [env, system, docker]
    timeout: 5s
    override: false

  resource:
    attributes:
      - key: service.name
        value: "otel-collector"
        action: upsert
      - key: service.version
        value: "1.0.0"
        action: upsert

exporters:
  otlp/tempo:
    endpoint: tempo:4317
    tls:
      insecure: true

  prometheus:
    endpoint: "0.0.0.0:9464"
    namespace: otel

  prometheusremotewrite:
    endpoint: "http://prometheus:9090/api/v1/write"
    tls:
      insecure: true

  otlphttp/loki:
    endpoint: http://loki:3100/otlp
    tls:
      insecure: true

  otlp/jaeger:
    endpoint: jaeger-all-in-one:4317
    tls:
      insecure: true

  debug: {}

extensions:
  health_check:
    endpoint: 0.0.0.0:13133

  pprof:
    endpoint: 0.0.0.0:1777

  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]

  pipelines:
    traces:
      receivers: [otlp, jaeger, zipkin]
      processors: [memory_limiter, resourcedetection, resource, batch]
      exporters: [otlp/tempo, otlp/jaeger, debug]

    metrics:
      receivers: [otlp, prometheus, hostmetrics]
      processors: [memory_limiter, resourcedetection, resource, batch]
      exporters: [prometheus, prometheusremotewrite, debug]

    logs:
      receivers: [otlp, filelog]
      processors: [memory_limiter, resourcedetection, resource, batch]
      exporters: [otlphttp/loki, debug]

  telemetry:
    metrics:
      readers:
        - pull:
            exporter:
              prometheus:
                host: "0.0.0.0"
                port: 8888

